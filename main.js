(()=>{"use strict";var n={28:(n,e,t)=>{t.d(e,{Z:()=>a});var r=t(537),o=t.n(r),A=t(645),i=t.n(A)()(o());i.push([n.id,"body {\n    margin: 0;\n    background-color: gray;\n}\n#mainContainer {\n    display: grid;\n    grid-template-columns: 1fr 2fr;\n    gap: 3px;\n    \n}\n\n#topDiv {\n    grid-column: 1/3;\n    background-color: #2db6b1;\n    padding: 30px;\n    font-size: 1.7rem;\n    border-radius: 0px 0px 10px 10px;\n    \n    color: rgb(245, 245, 245);\n}\n\n#userName {\n    font-weight: 600;\n    color: rgb(238, 238, 88);\n}\n\n.greet {\n    padding-left: 30px;\n}\n\n#projectDiv,\n#todoDiv {\n    border-radius: 10px;\n    margin: 5px;\n    box-shadow: 0 5px 10px rgb(0 0 0 / 0.5);\n}\n\n#projectDiv {\n    grid-row: 2/3;\n    background-color: #aed455;\n    height: 10vh;\n}\n\n#todoDiv {\n    background-color: #cfee86;\n}\n\n.folder {\n    display: flex;\n    justify-content: space-between;\n    background-color: rgb(32, 245, 174);\n    padding: 20px;\n    font-size: 1.3rem;\n    border-radius: 10px;\n    margin-bottom: 3px;\n}\n\n.folder:hover {\n    cursor: pointer;\n    background-color: rgb(135, 228, 197);\n } \n\n.btnContainer {\n    display: flex;\n    justify-content: center;\n}\n\n#btnProject,\n#btnTodo {\n    margin: 30px;\n    padding: 10px;\n    border-radius: 5px;\n    background-color: rgb(11, 165, 165);\n    font-size: 1.2rem;\n    font-weight: 600;\n    color: white;\n    box-shadow: 0 3px 10px rgb(0 0 0 / 0.2);\n}\n\n#btnProject:hover,\n#btnTodo:hover {\n    cursor: pointer;\n    background-color: rgb(105, 201, 201);\n}\n\n.todo {\n    padding: 10px;\n    font-size: 1.3rem;\n    background-color: rgb(238, 238, 88);\n    border-radius: 10px;\n}\n\n\n#closeBtn,\n#closeForm {\n  border: 1px solid rgb(65, 64, 64);\n  padding: 3px 12px;\n  background-color: rgb(218, 125, 125);\n  border-radius: 4px;\n  font-weight: 800;\n}\n\n#closeBtn:hover {\n    background-color: rgb(226, 154, 154);\n}\n\n#closeForm {\n    position: relative;\n    bottom: 8px;\n    left: 120px;\n}\n\n#closeForm:hover {\n    cursor: pointer;\n    background-color: rgb(226, 154, 154);\n    font-weight: 800;\n}\n\n\n#formContainer {\n    border: 2px solid black;\n    background-color: pink;\n    padding: 15px 0px;\n    text-align: center;\n    border-radius: 5px;\n    font-size: 1.2rem;\n    width: 300px;\n    position: absolute;\n    top: 14%;\n    left: 60%;\n    \n}\n\n.formHide {\n    display: none;\n}\n\n#input_wrap{\n    margin-bottom: 4px;\n}\n\ninput[type=text],\ninput[type=date] {\n    padding: 5px 0px;\n    width: 10vh;\n}\n\ninput[type=text] {\n    width: 10.2vh;\n}\n\nselect {\n    padding: 5px 0px;\n    width: 12.3vh;\n}\n#addBtn {\n    margin-top: 5px;\n    padding: 5px 10px;\n    background-color: rgb(11, 165, 165);\n    font-weight: 600;\n    font-size: 1rem;\n    color: white;\n    border-radius: 5px;\n}\n\n#addBtn:hover {\n    cursor: pointer;\n    background-color: rgb(105, 201, 201)\n}\n\n.taskHolder {\n    display: flex;\n    padding: 10px 10px;\n    font-size: 1.3rem;\n    border: 1px solid gray;\n    border-radius: 10px;\n    background-color: #cfee86;\n    margin-bottom: 10px;\n    box-shadow: 0 5px 10px rgb(0 0 0 / 0.2);\n}\n\n.text {\n    flex: 1;\n}\n\ninput[type=checkbox] {\n    width: 20px;\n    margin-right: 15px;\n    margin-left: 50px;\n}\n\n.removeBtn {\n    padding: 3px 12px;\n    margin-right: 50px;\n    background-color: rgb(218, 125, 125);\n    border-radius: 4px;\n    font-weight: 800;\n}\n\n.removeBtn:hover {\n    cursor: pointer;\n    background-color: rgb(226, 154, 154);\n    font-weight: 800;\n}\n\n.editBtn {\n    font-weight: 600;\n    background-color: rgb(105, 201, 201);\n    margin-right: 8px;\n    border-radius: 5px;\n}\n\n.editBtn:hover {\n    cursor: pointer;\n    background-color: rgb(140, 233, 233);\n}\n\n.lineThrough {\n    text-decoration: line-through;\n}\n\n.inputTitle,\n.inputDate,\n.inputPrio {\n    flex: 1;\n    margin-right: 30px;\n    background-color: rgb(238, 210, 157);\n    width: 20px;\n}\n\n#okBtn {\n    font-weight: 600;\n    background-color: rgb(105, 201, 129);\n    margin-right: 8px;\n    border-radius: 5px;\n}\n\n#okBtn:hover {\n    cursor: pointer;\n    background-color: rgb(114, 207, 137);\n}\n\n","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,sBAAsB;AAC1B;AACA;IACI,aAAa;IACb,8BAA8B;IAC9B,QAAQ;;AAEZ;;AAEA;IACI,gBAAgB;IAChB,yBAAyB;IACzB,aAAa;IACb,iBAAiB;IACjB,gCAAgC;;IAEhC,yBAAyB;AAC7B;;AAEA;IACI,gBAAgB;IAChB,wBAAwB;AAC5B;;AAEA;IACI,kBAAkB;AACtB;;AAEA;;IAEI,mBAAmB;IACnB,WAAW;IACX,uCAAuC;AAC3C;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mCAAmC;IACnC,aAAa;IACb,iBAAiB;IACjB,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,oCAAoC;CACvC;;AAED;IACI,aAAa;IACb,uBAAuB;AAC3B;;AAEA;;IAEI,YAAY;IACZ,aAAa;IACb,kBAAkB;IAClB,mCAAmC;IACnC,iBAAiB;IACjB,gBAAgB;IAChB,YAAY;IACZ,uCAAuC;AAC3C;;AAEA;;IAEI,eAAe;IACf,oCAAoC;AACxC;;AAEA;IACI,aAAa;IACb,iBAAiB;IACjB,mCAAmC;IACnC,mBAAmB;AACvB;;;AAGA;;EAEE,iCAAiC;EACjC,iBAAiB;EACjB,oCAAoC;EACpC,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,WAAW;AACf;;AAEA;IACI,eAAe;IACf,oCAAoC;IACpC,gBAAgB;AACpB;;;AAGA;IACI,uBAAuB;IACvB,sBAAsB;IACtB,iBAAiB;IACjB,kBAAkB;IAClB,kBAAkB;IAClB,iBAAiB;IACjB,YAAY;IACZ,kBAAkB;IAClB,QAAQ;IACR,SAAS;;AAEb;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;;IAEI,gBAAgB;IAChB,WAAW;AACf;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,gBAAgB;IAChB,aAAa;AACjB;AACA;IACI,eAAe;IACf,iBAAiB;IACjB,mCAAmC;IACnC,gBAAgB;IAChB,eAAe;IACf,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf;AACJ;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,iBAAiB;IACjB,sBAAsB;IACtB,mBAAmB;IACnB,yBAAyB;IACzB,mBAAmB;IACnB,uCAAuC;AAC3C;;AAEA;IACI,OAAO;AACX;;AAEA;IACI,WAAW;IACX,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;IAClB,oCAAoC;IACpC,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,eAAe;IACf,oCAAoC;IACpC,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,oCAAoC;IACpC,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,oCAAoC;AACxC;;AAEA;IACI,6BAA6B;AACjC;;AAEA;;;IAGI,OAAO;IACP,kBAAkB;IAClB,oCAAoC;IACpC,WAAW;AACf;;AAEA;IACI,gBAAgB;IAChB,oCAAoC;IACpC,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,oCAAoC;AACxC",sourcesContent:["body {\n    margin: 0;\n    background-color: gray;\n}\n#mainContainer {\n    display: grid;\n    grid-template-columns: 1fr 2fr;\n    gap: 3px;\n    \n}\n\n#topDiv {\n    grid-column: 1/3;\n    background-color: #2db6b1;\n    padding: 30px;\n    font-size: 1.7rem;\n    border-radius: 0px 0px 10px 10px;\n    \n    color: rgb(245, 245, 245);\n}\n\n#userName {\n    font-weight: 600;\n    color: rgb(238, 238, 88);\n}\n\n.greet {\n    padding-left: 30px;\n}\n\n#projectDiv,\n#todoDiv {\n    border-radius: 10px;\n    margin: 5px;\n    box-shadow: 0 5px 10px rgb(0 0 0 / 0.5);\n}\n\n#projectDiv {\n    grid-row: 2/3;\n    background-color: #aed455;\n    height: 10vh;\n}\n\n#todoDiv {\n    background-color: #cfee86;\n}\n\n.folder {\n    display: flex;\n    justify-content: space-between;\n    background-color: rgb(32, 245, 174);\n    padding: 20px;\n    font-size: 1.3rem;\n    border-radius: 10px;\n    margin-bottom: 3px;\n}\n\n.folder:hover {\n    cursor: pointer;\n    background-color: rgb(135, 228, 197);\n } \n\n.btnContainer {\n    display: flex;\n    justify-content: center;\n}\n\n#btnProject,\n#btnTodo {\n    margin: 30px;\n    padding: 10px;\n    border-radius: 5px;\n    background-color: rgb(11, 165, 165);\n    font-size: 1.2rem;\n    font-weight: 600;\n    color: white;\n    box-shadow: 0 3px 10px rgb(0 0 0 / 0.2);\n}\n\n#btnProject:hover,\n#btnTodo:hover {\n    cursor: pointer;\n    background-color: rgb(105, 201, 201);\n}\n\n.todo {\n    padding: 10px;\n    font-size: 1.3rem;\n    background-color: rgb(238, 238, 88);\n    border-radius: 10px;\n}\n\n\n#closeBtn,\n#closeForm {\n  border: 1px solid rgb(65, 64, 64);\n  padding: 3px 12px;\n  background-color: rgb(218, 125, 125);\n  border-radius: 4px;\n  font-weight: 800;\n}\n\n#closeBtn:hover {\n    background-color: rgb(226, 154, 154);\n}\n\n#closeForm {\n    position: relative;\n    bottom: 8px;\n    left: 120px;\n}\n\n#closeForm:hover {\n    cursor: pointer;\n    background-color: rgb(226, 154, 154);\n    font-weight: 800;\n}\n\n\n#formContainer {\n    border: 2px solid black;\n    background-color: pink;\n    padding: 15px 0px;\n    text-align: center;\n    border-radius: 5px;\n    font-size: 1.2rem;\n    width: 300px;\n    position: absolute;\n    top: 14%;\n    left: 60%;\n    \n}\n\n.formHide {\n    display: none;\n}\n\n#input_wrap{\n    margin-bottom: 4px;\n}\n\ninput[type=text],\ninput[type=date] {\n    padding: 5px 0px;\n    width: 10vh;\n}\n\ninput[type=text] {\n    width: 10.2vh;\n}\n\nselect {\n    padding: 5px 0px;\n    width: 12.3vh;\n}\n#addBtn {\n    margin-top: 5px;\n    padding: 5px 10px;\n    background-color: rgb(11, 165, 165);\n    font-weight: 600;\n    font-size: 1rem;\n    color: white;\n    border-radius: 5px;\n}\n\n#addBtn:hover {\n    cursor: pointer;\n    background-color: rgb(105, 201, 201)\n}\n\n.taskHolder {\n    display: flex;\n    padding: 10px 10px;\n    font-size: 1.3rem;\n    border: 1px solid gray;\n    border-radius: 10px;\n    background-color: #cfee86;\n    margin-bottom: 10px;\n    box-shadow: 0 5px 10px rgb(0 0 0 / 0.2);\n}\n\n.text {\n    flex: 1;\n}\n\ninput[type=checkbox] {\n    width: 20px;\n    margin-right: 15px;\n    margin-left: 50px;\n}\n\n.removeBtn {\n    padding: 3px 12px;\n    margin-right: 50px;\n    background-color: rgb(218, 125, 125);\n    border-radius: 4px;\n    font-weight: 800;\n}\n\n.removeBtn:hover {\n    cursor: pointer;\n    background-color: rgb(226, 154, 154);\n    font-weight: 800;\n}\n\n.editBtn {\n    font-weight: 600;\n    background-color: rgb(105, 201, 201);\n    margin-right: 8px;\n    border-radius: 5px;\n}\n\n.editBtn:hover {\n    cursor: pointer;\n    background-color: rgb(140, 233, 233);\n}\n\n.lineThrough {\n    text-decoration: line-through;\n}\n\n.inputTitle,\n.inputDate,\n.inputPrio {\n    flex: 1;\n    margin-right: 30px;\n    background-color: rgb(238, 210, 157);\n    width: 20px;\n}\n\n#okBtn {\n    font-weight: 600;\n    background-color: rgb(105, 201, 129);\n    margin-right: 8px;\n    border-radius: 5px;\n}\n\n#okBtn:hover {\n    cursor: pointer;\n    background-color: rgb(114, 207, 137);\n}\n\n"],sourceRoot:""}]);const a=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,A){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var a=0;a<this.length;a++){var d=this[a][0];null!=d&&(i[d]=!0)}for(var c=0;c<n.length;c++){var p=[].concat(n[c]);r&&i[p[0]]||(void 0!==A&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=A),t&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=t):p[2]=t),o&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=o):p[4]="".concat(o)),e.push(p))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),A="/*# ".concat(o," */");return[e].concat([A]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var A={},i=[],a=0;a<n.length;a++){var d=n[a],c=r.base?d[0]+r.base:d[0],p=A[c]||0,l="".concat(c," ").concat(p);A[c]=p+1;var s=t(l),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==s)e[s].references++,e[s].updater(u);else{var C=o(u,r);r.byIndex=a,e.splice(a,0,{identifier:l,updater:C,references:1})}i.push(l)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var A=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<A.length;i++){var a=t(A[i]);e[a].references--}for(var d=r(n,o),c=0;c<A.length;c++){var p=t(A[c]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}A=d}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var A=t.sourceMap;A&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var A=e[r]={id:r,exports:{}};return n[r](A,A.exports,t),A.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),A=t(569),i=t.n(A),a=t(565),d=t.n(a),c=t(216),p=t.n(c),l=t(589),s=t.n(l),u=t(28),C={};C.styleTagTransform=s(),C.setAttributes=d(),C.insert=i().bind(null,"head"),C.domAPI=o(),C.insertStyleElement=p(),e()(u.Z,C),u.Z&&u.Z.locals&&u.Z.locals;const g=document.querySelector(".todoContainer");let B=[];function b(){document.querySelectorAll(".taskHolder").forEach((n=>g.removeChild(n)));for(let n=0;n<B.length;n++)m(B[n])}function m(n){const e=document.createElement("div"),t=document.createElement("input"),r=document.createElement("div"),o=document.createElement("div"),A=document.createElement("div"),i=document.createElement("button"),a=document.createElement("button");e.classList.add("taskHolder"),e.setAttribute("id",B.indexOf(n)),t.setAttribute("type","checkbox"),e.appendChild(t),r.textContent=n.title,r.classList.add("text"),e.appendChild(r),o.textContent=n.due,o.classList.add("text"),e.appendChild(o),A.textContent=n.priority+" priority",A.classList.add("text"),e.appendChild(A),i.classList.add("editBtn"),i.innerText="Edit",e.appendChild(i),a.classList.add("removeBtn"),a.innerText="Remove",e.appendChild(a),g.appendChild(e),t.addEventListener("change",(n=>{n.target.checked?(e.style.backgroundColor="rgb(65, 64, 64)",e.style.color="gray",r.classList.add("lineThrough"),o.classList.add("lineThrough"),A.classList.add("lineThrough")):0==n.target.checked&&(e.style.removeProperty("color"),r.classList.remove("lineThrough"),o.classList.remove("lineThrough"),A.classList.remove("lineThrough"),e.style.backgroundColor="")})),i.addEventListener("click",(()=>{let e=document.createElement("input"),t=document.createElement("input"),a=document.createElement("select"),d=document.createElement("option"),c=document.createElement("option"),p=document.createElement("option");e.setAttribute("type","text"),e.classList.add("inputTitle"),e.value=n.title,t.setAttribute("type","date"),t.classList.add("inputDate"),t.value=n.due,a.classList.add("inputPrio"),c.defaultSelected=!0,d.setAttribute("value","Low");let l=document.createTextNode("Low");d.appendChild(l),a.appendChild(d),c.setAttribute("value","Normal");let s=document.createTextNode("Normal");c.appendChild(s),a.appendChild(c),p.setAttribute("value","Urgent");let u=document.createTextNode("Urgent");p.appendChild(u),a.appendChild(p),r.parentNode.replaceChild(e,r),o.parentNode.replaceChild(t,o),A.parentNode.replaceChild(a,A);const C=document.createElement("button");C.setAttribute("id","okBtn"),C.innerText="Ok",i.parentNode.replaceChild(C,i),C.addEventListener("click",(()=>{console.log(e.value),n.title=e.value,n.due=t.value,n.priority=a.value,r.textContent=n.title,o.textContent=n.due,A.textContent=n.priority+" priority",e.parentNode.replaceChild(r,e),t.parentNode.replaceChild(o,t),a.parentNode.replaceChild(A,a),C.parentNode.replaceChild(i,C),C.remove()}))})),a.addEventListener("click",(()=>{B.splice(B.indexOf(n),1),b(),console.log(B)}))}const x=document.getElementById("mainContainer"),h=document.querySelector(".folderContainer");let f=[];function I(n){n.addEventListener("click",(()=>{let e=document.createElement("div");e.setAttribute("id",f.indexOf(n)),document.querySelector("#mainContainer").removeChild(document.querySelector("#mainContainer").lastElementChild),x.appendChild(e)}))}const v=document.querySelector("#btnTodo"),k=document.querySelector("#formContainer"),y=document.querySelector("#closeForm"),E=document.querySelector("#addBtn"),w=(document.querySelector(".todoContainer"),document.querySelector("#mainContainer")),j=document.querySelector("#todoDiv");document.querySelector("#btnProject").addEventListener("click",(()=>{!function(){let n=document.createElement("div");n.innerText=prompt("Enter Folder name:"),n.classList.add("folder"),f.push(n),h.appendChild(n),function(){for(let n=0;n<f.length;n++)I(f[n])}()}()})),document.querySelector(".defaultFolder").addEventListener("click",(()=>{document.querySelector("#mainContainer").removeChild(document.querySelector("#mainContainer").lastElementChild),w.appendChild(j)})),v.addEventListener("click",(()=>{k.removeAttribute("class")})),y.addEventListener("click",(()=>{k.classList.add("formHide")})),E.addEventListener("click",(()=>{event.preventDefault(),B.push(((n,e,t)=>({title:n=n.value,due:e=e.value,priority:t=t.value}))(title,due,priority)),b(),console.log(B),k.classList.add("formHide")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QWlCLFNBQVMsS0FDcEN0RSxTQUFTQyxjQUFjLGtCQUFrQm9CLFlBQVlyQixTQUFTQyxjQUFjLGtCQUFrQitGLGtCQUM5RkssRUFBYzVGLFlBQVk2RixFQUFRLElBTXRDTCxFQUFRM0IsaUJBQWlCLFNBQVMsS0FDOUI0QixFQUFjUyxnQkFBZ0IsUUFBUSxJQUcxQ1IsRUFBVTdCLGlCQUFpQixTQUFTLEtBQ2hDNEIsRUFBY3BDLFVBQVVDLElBQUksV0FBVyxJQUczQ3FDLEVBQU85QixpQkFBaUIsU0FBUyxLRnhCN0JzQyxNQUFNQyxpQkFDTjNELEVBQVV2SCxLQVhNLEVBQUN1SSxFQUFPQyxFQUFLQyxLQUt2QixDQUFDRixNQUpQQSxFQUFRQSxFQUFNZSxNQUlBZCxJQUhkQSxFQUFNQSxFQUFJYyxNQUdTYixTQUZuQkEsRUFBV0EsRUFBU2EsUUFRTDZCLENBQVk1QyxNQUFPQyxJQUFLQyxXQUN2Q2pCLElFd0JBcUMsUUFBUUMsSUFBSXZDLEdBQ1pnRCxFQUFjcEMsVUFBVUMsSUFBSSxXQUFXLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vc3JjL3N0eWxlcy5jc3MiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL3RvcC10b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3RvcC10b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3RvcC10b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3RvcC10b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vc3JjL3N0eWxlcy5jc3M/NDRiMiIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vc3JjL21ha2VUb2Rvcy5qcyIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vc3JjL21ha2VGb2xkZXIuanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcImJvZHkge1xcbiAgICBtYXJnaW46IDA7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IGdyYXk7XFxufVxcbiNtYWluQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMmZyO1xcbiAgICBnYXA6IDNweDtcXG4gICAgXFxufVxcblxcbiN0b3BEaXYge1xcbiAgICBncmlkLWNvbHVtbjogMS8zO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmRiNmIxO1xcbiAgICBwYWRkaW5nOiAzMHB4O1xcbiAgICBmb250LXNpemU6IDEuN3JlbTtcXG4gICAgYm9yZGVyLXJhZGl1czogMHB4IDBweCAxMHB4IDEwcHg7XFxuICAgIFxcbiAgICBjb2xvcjogcmdiKDI0NSwgMjQ1LCAyNDUpO1xcbn1cXG5cXG4jdXNlck5hbWUge1xcbiAgICBmb250LXdlaWdodDogNjAwO1xcbiAgICBjb2xvcjogcmdiKDIzOCwgMjM4LCA4OCk7XFxufVxcblxcbi5ncmVldCB7XFxuICAgIHBhZGRpbmctbGVmdDogMzBweDtcXG59XFxuXFxuI3Byb2plY3REaXYsXFxuI3RvZG9EaXYge1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbiAgICBtYXJnaW46IDVweDtcXG4gICAgYm94LXNoYWRvdzogMCA1cHggMTBweCByZ2IoMCAwIDAgLyAwLjUpO1xcbn1cXG5cXG4jcHJvamVjdERpdiB7XFxuICAgIGdyaWQtcm93OiAyLzM7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNhZWQ0NTU7XFxuICAgIGhlaWdodDogMTB2aDtcXG59XFxuXFxuI3RvZG9EaXYge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2ZlZTg2O1xcbn1cXG5cXG4uZm9sZGVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMzIsIDI0NSwgMTc0KTtcXG4gICAgcGFkZGluZzogMjBweDtcXG4gICAgZm9udC1zaXplOiAxLjNyZW07XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuICAgIG1hcmdpbi1ib3R0b206IDNweDtcXG59XFxuXFxuLmZvbGRlcjpob3ZlciB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDEzNSwgMjI4LCAxOTcpO1xcbiB9IFxcblxcbi5idG5Db250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuXFxuI2J0blByb2plY3QsXFxuI2J0blRvZG8ge1xcbiAgICBtYXJnaW46IDMwcHg7XFxuICAgIHBhZGRpbmc6IDEwcHg7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDExLCAxNjUsIDE2NSk7XFxuICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xcbiAgICBmb250LXdlaWdodDogNjAwO1xcbiAgICBjb2xvcjogd2hpdGU7XFxuICAgIGJveC1zaGFkb3c6IDAgM3B4IDEwcHggcmdiKDAgMCAwIC8gMC4yKTtcXG59XFxuXFxuI2J0blByb2plY3Q6aG92ZXIsXFxuI2J0blRvZG86aG92ZXIge1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxMDUsIDIwMSwgMjAxKTtcXG59XFxuXFxuLnRvZG8ge1xcbiAgICBwYWRkaW5nOiAxMHB4O1xcbiAgICBmb250LXNpemU6IDEuM3JlbTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIzOCwgMjM4LCA4OCk7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxufVxcblxcblxcbiNjbG9zZUJ0bixcXG4jY2xvc2VGb3JtIHtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYig2NSwgNjQsIDY0KTtcXG4gIHBhZGRpbmc6IDNweCAxMnB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIxOCwgMTI1LCAxMjUpO1xcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xcbiAgZm9udC13ZWlnaHQ6IDgwMDtcXG59XFxuXFxuI2Nsb3NlQnRuOmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyNiwgMTU0LCAxNTQpO1xcbn1cXG5cXG4jY2xvc2VGb3JtIHtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICBib3R0b206IDhweDtcXG4gICAgbGVmdDogMTIwcHg7XFxufVxcblxcbiNjbG9zZUZvcm06aG92ZXIge1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMjYsIDE1NCwgMTU0KTtcXG4gICAgZm9udC13ZWlnaHQ6IDgwMDtcXG59XFxuXFxuXFxuI2Zvcm1Db250YWluZXIge1xcbiAgICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcGluaztcXG4gICAgcGFkZGluZzogMTVweCAwcHg7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgICBmb250LXNpemU6IDEuMnJlbTtcXG4gICAgd2lkdGg6IDMwMHB4O1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHRvcDogMTQlO1xcbiAgICBsZWZ0OiA2MCU7XFxuICAgIFxcbn1cXG5cXG4uZm9ybUhpZGUge1xcbiAgICBkaXNwbGF5OiBub25lO1xcbn1cXG5cXG4jaW5wdXRfd3JhcHtcXG4gICAgbWFyZ2luLWJvdHRvbTogNHB4O1xcbn1cXG5cXG5pbnB1dFt0eXBlPXRleHRdLFxcbmlucHV0W3R5cGU9ZGF0ZV0ge1xcbiAgICBwYWRkaW5nOiA1cHggMHB4O1xcbiAgICB3aWR0aDogMTB2aDtcXG59XFxuXFxuaW5wdXRbdHlwZT10ZXh0XSB7XFxuICAgIHdpZHRoOiAxMC4ydmg7XFxufVxcblxcbnNlbGVjdCB7XFxuICAgIHBhZGRpbmc6IDVweCAwcHg7XFxuICAgIHdpZHRoOiAxMi4zdmg7XFxufVxcbiNhZGRCdG4ge1xcbiAgICBtYXJnaW4tdG9wOiA1cHg7XFxuICAgIHBhZGRpbmc6IDVweCAxMHB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTEsIDE2NSwgMTY1KTtcXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcXG4gICAgZm9udC1zaXplOiAxcmVtO1xcbiAgICBjb2xvcjogd2hpdGU7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG59XFxuXFxuI2FkZEJ0bjpob3ZlciB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDEwNSwgMjAxLCAyMDEpXFxufVxcblxcbi50YXNrSG9sZGVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgcGFkZGluZzogMTBweCAxMHB4O1xcbiAgICBmb250LXNpemU6IDEuM3JlbTtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgZ3JheTtcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2NmZWU4NjtcXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcXG4gICAgYm94LXNoYWRvdzogMCA1cHggMTBweCByZ2IoMCAwIDAgLyAwLjIpO1xcbn1cXG5cXG4udGV4dCB7XFxuICAgIGZsZXg6IDE7XFxufVxcblxcbmlucHV0W3R5cGU9Y2hlY2tib3hdIHtcXG4gICAgd2lkdGg6IDIwcHg7XFxuICAgIG1hcmdpbi1yaWdodDogMTVweDtcXG4gICAgbWFyZ2luLWxlZnQ6IDUwcHg7XFxufVxcblxcbi5yZW1vdmVCdG4ge1xcbiAgICBwYWRkaW5nOiAzcHggMTJweDtcXG4gICAgbWFyZ2luLXJpZ2h0OiA1MHB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjE4LCAxMjUsIDEyNSk7XFxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcXG4gICAgZm9udC13ZWlnaHQ6IDgwMDtcXG59XFxuXFxuLnJlbW92ZUJ0bjpob3ZlciB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyNiwgMTU0LCAxNTQpO1xcbiAgICBmb250LXdlaWdodDogODAwO1xcbn1cXG5cXG4uZWRpdEJ0biB7XFxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxMDUsIDIwMSwgMjAxKTtcXG4gICAgbWFyZ2luLXJpZ2h0OiA4cHg7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG59XFxuXFxuLmVkaXRCdG46aG92ZXIge1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxNDAsIDIzMywgMjMzKTtcXG59XFxuXFxuLmxpbmVUaHJvdWdoIHtcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XFxufVxcblxcbi5pbnB1dFRpdGxlLFxcbi5pbnB1dERhdGUsXFxuLmlucHV0UHJpbyB7XFxuICAgIGZsZXg6IDE7XFxuICAgIG1hcmdpbi1yaWdodDogMzBweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIzOCwgMjEwLCAxNTcpO1xcbiAgICB3aWR0aDogMjBweDtcXG59XFxuXFxuI29rQnRuIHtcXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDEwNSwgMjAxLCAxMjkpO1xcbiAgICBtYXJnaW4tcmlnaHQ6IDhweDtcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xcbn1cXG5cXG4jb2tCdG46aG92ZXIge1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxMTQsIDIwNywgMTM3KTtcXG59XFxuXFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlcy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxTQUFTO0lBQ1Qsc0JBQXNCO0FBQzFCO0FBQ0E7SUFDSSxhQUFhO0lBQ2IsOEJBQThCO0lBQzlCLFFBQVE7O0FBRVo7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIseUJBQXlCO0lBQ3pCLGFBQWE7SUFDYixpQkFBaUI7SUFDakIsZ0NBQWdDOztJQUVoQyx5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsd0JBQXdCO0FBQzVCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBOztJQUVJLG1CQUFtQjtJQUNuQixXQUFXO0lBQ1gsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHlCQUF5QjtJQUN6QixZQUFZO0FBQ2hCOztBQUVBO0lBQ0kseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLDhCQUE4QjtJQUM5QixtQ0FBbUM7SUFDbkMsYUFBYTtJQUNiLGlCQUFpQjtJQUNqQixtQkFBbUI7SUFDbkIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLG9DQUFvQztDQUN2Qzs7QUFFRDtJQUNJLGFBQWE7SUFDYix1QkFBdUI7QUFDM0I7O0FBRUE7O0lBRUksWUFBWTtJQUNaLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsbUNBQW1DO0lBQ25DLGlCQUFpQjtJQUNqQixnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLHVDQUF1QztBQUMzQzs7QUFFQTs7SUFFSSxlQUFlO0lBQ2Ysb0NBQW9DO0FBQ3hDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLGlCQUFpQjtJQUNqQixtQ0FBbUM7SUFDbkMsbUJBQW1CO0FBQ3ZCOzs7QUFHQTs7RUFFRSxpQ0FBaUM7RUFDakMsaUJBQWlCO0VBQ2pCLG9DQUFvQztFQUNwQyxrQkFBa0I7RUFDbEIsZ0JBQWdCO0FBQ2xCOztBQUVBO0lBQ0ksb0NBQW9DO0FBQ3hDOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxlQUFlO0lBQ2Ysb0NBQW9DO0lBQ3BDLGdCQUFnQjtBQUNwQjs7O0FBR0E7SUFDSSx1QkFBdUI7SUFDdkIsc0JBQXNCO0lBQ3RCLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLFFBQVE7SUFDUixTQUFTOztBQUViOztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTs7SUFFSSxnQkFBZ0I7SUFDaEIsV0FBVztBQUNmOztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixhQUFhO0FBQ2pCO0FBQ0E7SUFDSSxlQUFlO0lBQ2YsaUJBQWlCO0lBQ2pCLG1DQUFtQztJQUNuQyxnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLFlBQVk7SUFDWixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxlQUFlO0lBQ2Y7QUFDSjs7QUFFQTtJQUNJLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLG1CQUFtQjtJQUNuQix1Q0FBdUM7QUFDM0M7O0FBRUE7SUFDSSxPQUFPO0FBQ1g7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsb0NBQW9DO0lBQ3BDLGtCQUFrQjtJQUNsQixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxlQUFlO0lBQ2Ysb0NBQW9DO0lBQ3BDLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixvQ0FBb0M7SUFDcEMsaUJBQWlCO0lBQ2pCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGVBQWU7SUFDZixvQ0FBb0M7QUFDeEM7O0FBRUE7SUFDSSw2QkFBNkI7QUFDakM7O0FBRUE7OztJQUdJLE9BQU87SUFDUCxrQkFBa0I7SUFDbEIsb0NBQW9DO0lBQ3BDLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixvQ0FBb0M7SUFDcEMsaUJBQWlCO0lBQ2pCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGVBQWU7SUFDZixvQ0FBb0M7QUFDeENcIixcInNvdXJjZXNDb250ZW50XCI6W1wiYm9keSB7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTtcXG59XFxuI21haW5Db250YWluZXIge1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAyZnI7XFxuICAgIGdhcDogM3B4O1xcbiAgICBcXG59XFxuXFxuI3RvcERpdiB7XFxuICAgIGdyaWQtY29sdW1uOiAxLzM7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyZGI2YjE7XFxuICAgIHBhZGRpbmc6IDMwcHg7XFxuICAgIGZvbnQtc2l6ZTogMS43cmVtO1xcbiAgICBib3JkZXItcmFkaXVzOiAwcHggMHB4IDEwcHggMTBweDtcXG4gICAgXFxuICAgIGNvbG9yOiByZ2IoMjQ1LCAyNDUsIDI0NSk7XFxufVxcblxcbiN1c2VyTmFtZSB7XFxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XFxuICAgIGNvbG9yOiByZ2IoMjM4LCAyMzgsIDg4KTtcXG59XFxuXFxuLmdyZWV0IHtcXG4gICAgcGFkZGluZy1sZWZ0OiAzMHB4O1xcbn1cXG5cXG4jcHJvamVjdERpdixcXG4jdG9kb0RpdiB7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuICAgIG1hcmdpbjogNXB4O1xcbiAgICBib3gtc2hhZG93OiAwIDVweCAxMHB4IHJnYigwIDAgMCAvIDAuNSk7XFxufVxcblxcbiNwcm9qZWN0RGl2IHtcXG4gICAgZ3JpZC1yb3c6IDIvMztcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2FlZDQ1NTtcXG4gICAgaGVpZ2h0OiAxMHZoO1xcbn1cXG5cXG4jdG9kb0RpdiB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNjZmVlODY7XFxufVxcblxcbi5mb2xkZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigzMiwgMjQ1LCAxNzQpO1xcbiAgICBwYWRkaW5nOiAyMHB4O1xcbiAgICBmb250LXNpemU6IDEuM3JlbTtcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG4gICAgbWFyZ2luLWJvdHRvbTogM3B4O1xcbn1cXG5cXG4uZm9sZGVyOmhvdmVyIHtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTM1LCAyMjgsIDE5Nyk7XFxuIH0gXFxuXFxuLmJ0bkNvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbn1cXG5cXG4jYnRuUHJvamVjdCxcXG4jYnRuVG9kbyB7XFxuICAgIG1hcmdpbjogMzBweDtcXG4gICAgcGFkZGluZzogMTBweDtcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTEsIDE2NSwgMTY1KTtcXG4gICAgZm9udC1zaXplOiAxLjJyZW07XFxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XFxuICAgIGNvbG9yOiB3aGl0ZTtcXG4gICAgYm94LXNoYWRvdzogMCAzcHggMTBweCByZ2IoMCAwIDAgLyAwLjIpO1xcbn1cXG5cXG4jYnRuUHJvamVjdDpob3ZlcixcXG4jYnRuVG9kbzpob3ZlciB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDEwNSwgMjAxLCAyMDEpO1xcbn1cXG5cXG4udG9kbyB7XFxuICAgIHBhZGRpbmc6IDEwcHg7XFxuICAgIGZvbnQtc2l6ZTogMS4zcmVtO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjM4LCAyMzgsIDg4KTtcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG59XFxuXFxuXFxuI2Nsb3NlQnRuLFxcbiNjbG9zZUZvcm0ge1xcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiKDY1LCA2NCwgNjQpO1xcbiAgcGFkZGluZzogM3B4IDEycHg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjE4LCAxMjUsIDEyNSk7XFxuICBib3JkZXItcmFkaXVzOiA0cHg7XFxuICBmb250LXdlaWdodDogODAwO1xcbn1cXG5cXG4jY2xvc2VCdG46aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjI2LCAxNTQsIDE1NCk7XFxufVxcblxcbiNjbG9zZUZvcm0ge1xcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICAgIGJvdHRvbTogOHB4O1xcbiAgICBsZWZ0OiAxMjBweDtcXG59XFxuXFxuI2Nsb3NlRm9ybTpob3ZlciB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyNiwgMTU0LCAxNTQpO1xcbiAgICBmb250LXdlaWdodDogODAwO1xcbn1cXG5cXG5cXG4jZm9ybUNvbnRhaW5lciB7XFxuICAgIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBwaW5rO1xcbiAgICBwYWRkaW5nOiAxNXB4IDBweDtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xcbiAgICB3aWR0aDogMzAwcHg7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgdG9wOiAxNCU7XFxuICAgIGxlZnQ6IDYwJTtcXG4gICAgXFxufVxcblxcbi5mb3JtSGlkZSB7XFxuICAgIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbiNpbnB1dF93cmFwe1xcbiAgICBtYXJnaW4tYm90dG9tOiA0cHg7XFxufVxcblxcbmlucHV0W3R5cGU9dGV4dF0sXFxuaW5wdXRbdHlwZT1kYXRlXSB7XFxuICAgIHBhZGRpbmc6IDVweCAwcHg7XFxuICAgIHdpZHRoOiAxMHZoO1xcbn1cXG5cXG5pbnB1dFt0eXBlPXRleHRdIHtcXG4gICAgd2lkdGg6IDEwLjJ2aDtcXG59XFxuXFxuc2VsZWN0IHtcXG4gICAgcGFkZGluZzogNXB4IDBweDtcXG4gICAgd2lkdGg6IDEyLjN2aDtcXG59XFxuI2FkZEJ0biB7XFxuICAgIG1hcmdpbi10b3A6IDVweDtcXG4gICAgcGFkZGluZzogNXB4IDEwcHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxMSwgMTY1LCAxNjUpO1xcbiAgICBmb250LXdlaWdodDogNjAwO1xcbiAgICBmb250LXNpemU6IDFyZW07XFxuICAgIGNvbG9yOiB3aGl0ZTtcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xcbn1cXG5cXG4jYWRkQnRuOmhvdmVyIHtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTA1LCAyMDEsIDIwMSlcXG59XFxuXFxuLnRhc2tIb2xkZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBwYWRkaW5nOiAxMHB4IDEwcHg7XFxuICAgIGZvbnQtc2l6ZTogMS4zcmVtO1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCBncmF5O1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2ZlZTg2O1xcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xcbiAgICBib3gtc2hhZG93OiAwIDVweCAxMHB4IHJnYigwIDAgMCAvIDAuMik7XFxufVxcblxcbi50ZXh0IHtcXG4gICAgZmxleDogMTtcXG59XFxuXFxuaW5wdXRbdHlwZT1jaGVja2JveF0ge1xcbiAgICB3aWR0aDogMjBweDtcXG4gICAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xcbiAgICBtYXJnaW4tbGVmdDogNTBweDtcXG59XFxuXFxuLnJlbW92ZUJ0biB7XFxuICAgIHBhZGRpbmc6IDNweCAxMnB4O1xcbiAgICBtYXJnaW4tcmlnaHQ6IDUwcHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMTgsIDEyNSwgMTI1KTtcXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xcbiAgICBmb250LXdlaWdodDogODAwO1xcbn1cXG5cXG4ucmVtb3ZlQnRuOmhvdmVyIHtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjI2LCAxNTQsIDE1NCk7XFxuICAgIGZvbnQtd2VpZ2h0OiA4MDA7XFxufVxcblxcbi5lZGl0QnRuIHtcXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDEwNSwgMjAxLCAyMDEpO1xcbiAgICBtYXJnaW4tcmlnaHQ6IDhweDtcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xcbn1cXG5cXG4uZWRpdEJ0bjpob3ZlciB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE0MCwgMjMzLCAyMzMpO1xcbn1cXG5cXG4ubGluZVRocm91Z2gge1xcbiAgICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcXG59XFxuXFxuLmlucHV0VGl0bGUsXFxuLmlucHV0RGF0ZSxcXG4uaW5wdXRQcmlvIHtcXG4gICAgZmxleDogMTtcXG4gICAgbWFyZ2luLXJpZ2h0OiAzMHB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjM4LCAyMTAsIDE1Nyk7XFxuICAgIHdpZHRoOiAyMHB4O1xcbn1cXG5cXG4jb2tCdG4ge1xcbiAgICBmb250LXdlaWdodDogNjAwO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTA1LCAyMDEsIDEyOSk7XFxuICAgIG1hcmdpbi1yaWdodDogOHB4O1xcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxufVxcblxcbiNva0J0bjpob3ZlciB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDExNCwgMjA3LCAxMzcpO1xcbn1cXG5cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGVzLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGVzLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImNvbnN0IHRvZG8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudG9kb0NvbnRhaW5lcicpO1xuXG5sZXQgdG9kb0FycmF5ID0gW107XG5cbmNvbnN0IHRvZG9GYWN0b3J5ID0gKHRpdGxlLCBkdWUsIHByaW9yaXR5KSA9PiB7XG4gICAgdGl0bGUgPSB0aXRsZS52YWx1ZTtcbiAgICBkdWUgPSBkdWUudmFsdWU7XG4gICAgcHJpb3JpdHkgPSBwcmlvcml0eS52YWx1ZTtcblxuICAgIHJldHVybnt0aXRsZSwgZHVlLCBwcmlvcml0eX07XG59O1xuXG5cbmZ1bmN0aW9uIGFkZFRvZG8oKSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB0b2RvQXJyYXkucHVzaCh0b2RvRmFjdG9yeSh0aXRsZSwgZHVlLCBwcmlvcml0eSkpO1xuICAgIHJlbmRlcigpO1xufTtcblxuZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIC8vY2FsbCB0b2RvXG4gICAgY29uc3QgbXVsdGlUYXNrSG9sZGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnRhc2tIb2xkZXInKTtcbiAgICBtdWx0aVRhc2tIb2xkZXIuZm9yRWFjaCh0YXNrSG9sZGVyID0+IHRvZG8ucmVtb3ZlQ2hpbGQodGFza0hvbGRlcikpO1xuICAgIFxuICAgIGZvcihsZXQgaSA9IDA7IGk8dG9kb0FycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNyZWF0ZVRvZG8odG9kb0FycmF5W2ldKTtcbiAgICB9XG5cbn1cblxuZnVuY3Rpb24gY3JlYXRlVG9kbyhpdGVtKSB7XG4gICAgLy9jYWxsIHRvZG8gPSAjbGlicmFyeS1jb250YWluZXJcbiAgICBcbiAgICBjb25zdCB0YXNrSG9sZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7IC8vPSBib29rRGl2XG4gICAgY29uc3QgY2hlY2tCb3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgIGNvbnN0IHRpdGxlRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgY29uc3QgZHVlRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgY29uc3QgcHJpb0RpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNvbnN0IGVkaXRCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICBjb25zdCByZW1vdmVCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcblxuICAgIHRhc2tIb2xkZXIuY2xhc3NMaXN0LmFkZCgndGFza0hvbGRlcicpO1xuICAgIHRhc2tIb2xkZXIuc2V0QXR0cmlidXRlKCdpZCcsIHRvZG9BcnJheS5pbmRleE9mKGl0ZW0pKTtcblxuICAgIGNoZWNrQm94LnNldEF0dHJpYnV0ZSgndHlwZScsICdjaGVja2JveCcpO1xuICAgIHRhc2tIb2xkZXIuYXBwZW5kQ2hpbGQoY2hlY2tCb3gpO1xuXG4gICAgdGl0bGVEaXYudGV4dENvbnRlbnQgPSBpdGVtLnRpdGxlO1xuICAgIHRpdGxlRGl2LmNsYXNzTGlzdC5hZGQoJ3RleHQnKTtcbiAgICB0YXNrSG9sZGVyLmFwcGVuZENoaWxkKHRpdGxlRGl2KTtcblxuICAgIGR1ZURpdi50ZXh0Q29udGVudCA9IGl0ZW0uZHVlO1xuICAgIGR1ZURpdi5jbGFzc0xpc3QuYWRkKCd0ZXh0Jyk7XG4gICAgdGFza0hvbGRlci5hcHBlbmRDaGlsZChkdWVEaXYpO1xuXG4gICAgcHJpb0Rpdi50ZXh0Q29udGVudCA9IGl0ZW0ucHJpb3JpdHkgKyAnIHByaW9yaXR5JztcbiAgICBwcmlvRGl2LmNsYXNzTGlzdC5hZGQoJ3RleHQnKTtcbiAgICB0YXNrSG9sZGVyLmFwcGVuZENoaWxkKHByaW9EaXYpO1xuXG4gICAgZWRpdEJ0bi5jbGFzc0xpc3QuYWRkKCdlZGl0QnRuJyk7XG4gICAgZWRpdEJ0bi5pbm5lclRleHQgPSBcIkVkaXRcIjtcbiAgICB0YXNrSG9sZGVyLmFwcGVuZENoaWxkKGVkaXRCdG4pO1xuXG4gICAgcmVtb3ZlQnRuLmNsYXNzTGlzdC5hZGQoJ3JlbW92ZUJ0bicpO1xuICAgIHJlbW92ZUJ0bi5pbm5lclRleHQgPSAnUmVtb3ZlJztcbiAgICB0YXNrSG9sZGVyLmFwcGVuZENoaWxkKHJlbW92ZUJ0bik7XG5cbiAgICB0b2RvLmFwcGVuZENoaWxkKHRhc2tIb2xkZXIpO1xuXG4gICAgY2hlY2tCb3guYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpID0+IHtcbiAgICAgICAgXG4gICAgICAgIGlmKGUudGFyZ2V0LmNoZWNrZWQpIHtcbiAgICAgICAgICAgIHRhc2tIb2xkZXIuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJ3JnYig2NSwgNjQsIDY0KSc7XG4gICAgICAgICAgICB0YXNrSG9sZGVyLnN0eWxlLmNvbG9yID0gJ2dyYXknO1xuICAgICAgICAgICAgdGl0bGVEaXYuY2xhc3NMaXN0LmFkZCgnbGluZVRocm91Z2gnKTtcbiAgICAgICAgICAgIGR1ZURpdi5jbGFzc0xpc3QuYWRkKCdsaW5lVGhyb3VnaCcpO1xuICAgICAgICAgICAgcHJpb0Rpdi5jbGFzc0xpc3QuYWRkKCdsaW5lVGhyb3VnaCcpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGUudGFyZ2V0LmNoZWNrZWQgPT0gZmFsc2UpIHtcbiAgICAgICAgICAgIHRhc2tIb2xkZXIuc3R5bGUucmVtb3ZlUHJvcGVydHkoJ2NvbG9yJyk7XG4gICAgICAgICAgICB0aXRsZURpdi5jbGFzc0xpc3QucmVtb3ZlKCdsaW5lVGhyb3VnaCcpO1xuICAgICAgICAgICAgZHVlRGl2LmNsYXNzTGlzdC5yZW1vdmUoJ2xpbmVUaHJvdWdoJyk7XG4gICAgICAgICAgICBwcmlvRGl2LmNsYXNzTGlzdC5yZW1vdmUoJ2xpbmVUaHJvdWdoJyk7XG4gICAgICAgICAgICB0YXNrSG9sZGVyLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwiXCI7XG4gICAgICAgIH07XG4gICAgfSlcblxuICAgIC8vIGVkaXQgZnVuY3Rpb24hXG5cbiAgICBlZGl0QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICBsZXQgaW5wdXRUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgICAgIGxldCBpbnB1dERhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgICAgICBsZXQgaW5wdXRQcmlvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2VsZWN0Jyk7XG4gICAgICAgIGxldCBvcHQxID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XG4gICAgICAgIGxldCBvcHQyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XG4gICAgICAgIGxldCBvcHQzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XG5cbiAgICAgICAgaW5wdXRUaXRsZS5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAndGV4dCcpO1xuICAgICAgICBpbnB1dFRpdGxlLmNsYXNzTGlzdC5hZGQoJ2lucHV0VGl0bGUnKTtcbiAgICAgICAgaW5wdXRUaXRsZS52YWx1ZSA9IGl0ZW0udGl0bGU7XG5cbiAgICAgICAgaW5wdXREYXRlLnNldEF0dHJpYnV0ZSgndHlwZScsICdkYXRlJyk7XG4gICAgICAgIGlucHV0RGF0ZS5jbGFzc0xpc3QuYWRkKCdpbnB1dERhdGUnKTtcbiAgICAgICAgaW5wdXREYXRlLnZhbHVlID0gaXRlbS5kdWU7XG5cbiAgICAgICAgaW5wdXRQcmlvLmNsYXNzTGlzdC5hZGQoJ2lucHV0UHJpbycpO1xuICAgICAgICBvcHQyLmRlZmF1bHRTZWxlY3RlZCA9IHRydWU7XG5cbiAgICAgICAgb3B0MS5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgJ0xvdycpO1xuICAgICAgICBsZXQgbG93ID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJ0xvdycpO1xuICAgICAgICBvcHQxLmFwcGVuZENoaWxkKGxvdyk7XG4gICAgICAgIGlucHV0UHJpby5hcHBlbmRDaGlsZChvcHQxKTtcblxuICAgICAgICBvcHQyLnNldEF0dHJpYnV0ZSgndmFsdWUnLCAnTm9ybWFsJyk7XG4gICAgICAgIGxldCBub3JtYWwgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnTm9ybWFsJyk7XG4gICAgICAgIG9wdDIuYXBwZW5kQ2hpbGQobm9ybWFsKTtcbiAgICAgICAgaW5wdXRQcmlvLmFwcGVuZENoaWxkKG9wdDIpO1xuXG4gICAgICAgIG9wdDMuc2V0QXR0cmlidXRlKCd2YWx1ZScsICdVcmdlbnQnKTtcbiAgICAgICAgbGV0IHVyZ2VudCA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCdVcmdlbnQnKTtcbiAgICAgICAgb3B0My5hcHBlbmRDaGlsZCh1cmdlbnQpO1xuICAgICAgICBpbnB1dFByaW8uYXBwZW5kQ2hpbGQob3B0Myk7XG5cblxuICAgICAgICB0aXRsZURpdi5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZChpbnB1dFRpdGxlLCB0aXRsZURpdik7XG4gICAgICAgIGR1ZURpdi5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZChpbnB1dERhdGUsIGR1ZURpdik7XG4gICAgICAgIHByaW9EaXYucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQoaW5wdXRQcmlvLCBwcmlvRGl2KTtcbiAgICAgICAgLy8gZW5kIGVkaXQgYnV0dG9uXG5cbiAgICAgICAgLy8gYnV0dG9uIHRvIGFjY2VwdCBjaGFuZ2VzXG4gICAgICAgIGNvbnN0IG9rQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgICAgIG9rQnRuLnNldEF0dHJpYnV0ZSgnaWQnLCAnb2tCdG4nKTtcbiAgICAgICAgb2tCdG4uaW5uZXJUZXh0ID0gJ09rJztcbiAgICAgICAgLy8gdGFza0hvbGRlci5hcHBlbmRDaGlsZChva0J0bik7XG5cbiAgICAgICAgZWRpdEJ0bi5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZChva0J0biwgZWRpdEJ0bik7XG4gICAgICAgIFxuICAgICAgICBva0J0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGlucHV0VGl0bGUudmFsdWUpO1xuXG4gICAgICAgICAgICBpdGVtLnRpdGxlID0gaW5wdXRUaXRsZS52YWx1ZTtcbiAgICAgICAgICAgIGl0ZW0uZHVlID0gaW5wdXREYXRlLnZhbHVlO1xuICAgICAgICAgICAgaXRlbS5wcmlvcml0eSA9IGlucHV0UHJpby52YWx1ZTtcblxuICAgICAgICAgICAgdGl0bGVEaXYudGV4dENvbnRlbnQgPSBpdGVtLnRpdGxlO1xuICAgICAgICAgICAgZHVlRGl2LnRleHRDb250ZW50ID0gaXRlbS5kdWU7XG4gICAgICAgICAgICBwcmlvRGl2LnRleHRDb250ZW50ID0gaXRlbS5wcmlvcml0eSArIFwiIHByaW9yaXR5XCI7XG5cbiAgICAgICAgICAgIGlucHV0VGl0bGUucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQodGl0bGVEaXYsIGlucHV0VGl0bGUpO1xuICAgICAgICAgICAgaW5wdXREYXRlLnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKGR1ZURpdiwgaW5wdXREYXRlKTtcbiAgICAgICAgICAgIGlucHV0UHJpby5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZChwcmlvRGl2LCBpbnB1dFByaW8pO1xuICAgICAgICBcbiAgICAgICAgb2tCdG4ucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQoZWRpdEJ0biwgb2tCdG4pO1xuXG4gICAgICAgICAgICBva0J0bi5yZW1vdmUoKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgIC8vIGVuZCBidXR0b25cbiAgICB9KVxuICAgIC8vIGVuZCBlZGl0XG4gICAgcmVtb3ZlQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICB0b2RvQXJyYXkuc3BsaWNlKHRvZG9BcnJheS5pbmRleE9mKGl0ZW0pLCAxKTtcbiAgICAgICAgcmVuZGVyKCk7XG4gICAgICAgIGNvbnNvbGUubG9nKHRvZG9BcnJheSk7XG4gICAgfSlcbn1cblxuZXhwb3J0IHthZGRUb2RvLCB0b2RvQXJyYXl9OyIsImltcG9ydCB7IGFkZFRvZG8sIHRvZG9BcnJheSB9IGZyb20gXCIuL21ha2VUb2Rvcy5qc1wiO1xuY29uc3QgbWFpbkNvbnRhaW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFpbkNvbnRhaW5lcicpO1xuY29uc3QgZm9sZGVyQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZvbGRlckNvbnRhaW5lcicpO1xuXG5sZXQgZm9sZGVyQXJyYXkgPSBbXTtcblxuZnVuY3Rpb24gYWRkRm9sZGVyKCkge1xuICAgIGxldCBuZXdGb2xkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBuZXdGb2xkZXIuaW5uZXJUZXh0ID0gcHJvbXB0KCdFbnRlciBGb2xkZXIgbmFtZTonKTtcbiAgICBuZXdGb2xkZXIuY2xhc3NMaXN0LmFkZCgnZm9sZGVyJyk7XG5cbiAgICBmb2xkZXJBcnJheS5wdXNoKG5ld0ZvbGRlcik7XG4gICAgZm9sZGVyQ29udGFpbmVyLmFwcGVuZENoaWxkKG5ld0ZvbGRlcik7XG4gICAgXG4gICAgcmVuZGVyRm9sZGVyKCk7XG59XG5cbmZ1bmN0aW9uIHJlbmRlckZvbGRlcigpIHtcbiAgICBmb3IobGV0IGkgPSAwOyBpPGZvbGRlckFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIC8vIGNyZWF0ZVRvZG8odG9kb0FycmF5W2ldKTtcbiAgICAgICAgY3JlYXRlRm9sZGVyRnVuYyhmb2xkZXJBcnJheVtpXSk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBjcmVhdGVGb2xkZXJGdW5jKGl0ZW0pIHtcbiAgICAvL3Rhc2tIb2xkZXIuc2V0QXR0cmlidXRlKCdpZCcsIHRvZG9BcnJheS5pbmRleE9mKGl0ZW0pKTtcbiAgICBpdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICBsZXQgbmV3RG9jID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIG5ld0RvYy5zZXRBdHRyaWJ1dGUoJ2lkJywgZm9sZGVyQXJyYXkuaW5kZXhPZihpdGVtKSk7XG4gICAgICAgXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNtYWluQ29udGFpbmVyJykucmVtb3ZlQ2hpbGQoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI21haW5Db250YWluZXInKS5sYXN0RWxlbWVudENoaWxkKTtcbiAgICAgICAgLy8gdG9kb0Rpdi5hcHBlbmRDaGlsZCh0b2RvKTtcbiAgICAgICAgbWFpbkNvbnRhaW4uYXBwZW5kQ2hpbGQobmV3RG9jKTsgLy8gPSB0b2RvRGl2IFxuXG4gICAgLy8gICAgIGxldCBidG5Db250YWluZXJGb2xkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAvLyAgICAgYnRuQ29udGFpbmVyRm9sZGVyLmNsYXNzTGlzdC5hZGQoJ2J0bkNvbnRhaW5lcicpO1xuICAgIC8vICAgICBuZXdEb2MuYXBwZW5kQ2hpbGQoYnRuQ29udGFpbmVyRm9sZGVyKTtcbiAgICAgICAgXG4gICAgLy8gICAgIGxldCBidG5Ub2RvRm9sZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7IC8vK25ldyB0byBkb1xuICAgIC8vICAgICBidG5Ub2RvRm9sZGVyLnNldEF0dHJpYnV0ZSgnaWQnLCAnYnRuVG9kbycpO1xuICAgIC8vICAgICBidG5Ub2RvRm9sZGVyLmlubmVyVGV4dCA9ICcrIE5ldyBUbyBEbyc7XG4gICAgLy8gICAgIGJ0bkNvbnRhaW5lckZvbGRlci5hcHBlbmRDaGlsZChidG5Ub2RvRm9sZGVyKTtcblxuICAgIC8vICAgICBidG5Ub2RvRm9sZGVyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgIC8vICAgICAgICAgZm9ybUNvbnRhaW5lci5yZW1vdmVBdHRyaWJ1dGUoJ2NsYXNzJyk7XG4gICAgLy8gICAgIH0pXG5cbiAgICAvLyAgICAgbGV0IGZvcm1Db250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsgLy9mb3JtQ29udGFpbmVyXG4gICAgLy8gICAgIGZvcm1Db250YWluZXIuc2V0QXR0cmlidXRlKCdpZCcsICdmb3JtQ29udGFpbmVyJyk7XG4gICAgLy8gICAgIGZvcm1Db250YWluZXIuY2xhc3NMaXN0LmFkZCgnZm9ybUhpZGUnKTtcbiAgICAvLyAgICAgbmV3RG9jLmFwcGVuZENoaWxkKGZvcm1Db250YWluZXIpO1xuXG4gICAgLy8gICAgIGxldCBmb3JtRm9sZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZm9ybScpO1xuICAgIC8vICAgICBmb3JtRm9sZGVyLmFjdGlvbiA9IFwiaW5kZXguanNcIjtcbiAgICAvLyAgICAgZm9ybUNvbnRhaW5lci5hcHBlbmRDaGlsZChmb3JtRm9sZGVyKTtcbiAgICAgICAgXG4gICAgLy8gICAgIGxldCBjbG9zZUZvcm1Gb2xkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICAvLyAgICAgY2xvc2VGb3JtRm9sZGVyLnNldEF0dHJpYnV0ZSgnaWQnLCAnY2xvc2VGb3JtJyk7XG4gICAgLy8gICAgIGNsb3NlRm9ybUZvbGRlci5pbm5lclRleHQgPSBcIlhcIjtcbiAgICAvLyAgICAgZm9ybUZvbGRlci5hcHBlbmRDaGlsZChjbG9zZUZvcm1Gb2xkZXIpO1xuXG4gICAgLy8gICAgIGxldCBpbnB1dFdyYXBGb2xkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAvLyAgICAgaW5wdXRXcmFwRm9sZGVyLnNldEF0dHJpYnV0ZSgnaWQnLCAnaW5wdXRfd3JhcCcpO1xuICAgIC8vICAgICBmb3JtRm9sZGVyLmFwcGVuZENoaWxkKGlucHV0V3JhcEZvbGRlcik7XG5cbiAgICAvLyAgICAgbGV0IGxhYmVsVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgIC8vICAgICBsYWJlbFRpdGxlLmh0bWxGb3IgPSAnVGl0bGUnO1xuICAgIC8vICAgICBsYWJlbFRpdGxlLmlubmVyVGV4dCA9IFwiVGl0bGU6IFwiO1xuICAgIC8vICAgICBpbnB1dFdyYXBGb2xkZXIuYXBwZW5kQ2hpbGQobGFiZWxUaXRsZSk7XG5cbiAgICAvLyAgICAgbGV0IGlucHV0VGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgIC8vICAgICBpbnB1dFRpdGxlLnNldEF0dHJpYnV0ZSgndHlwZScsICd0ZXh0Jyk7XG4gICAgLy8gICAgIGlucHV0VGl0bGUuc2V0QXR0cmlidXRlKCdpZCcsICd0aXRsZScpOztcbiAgICAvLyAgICAgaW5wdXRUaXRsZS5wbGFjZWhvbGRlciA9IFwiWW91ciB0YXNrOlwiXG4gICAgLy8gICAgIGlucHV0VGl0bGUudmFsdWUgPSBcInRhc2sxXCI7XG4gICAgLy8gICAgIGlucHV0V3JhcEZvbGRlci5hcHBlbmRDaGlsZChpbnB1dFRpdGxlKTtcblxuICAgIC8vICAgICBsZXQgaW5wdXRXcmFwRm9sZGVyMiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIC8vICAgICBpbnB1dFdyYXBGb2xkZXIyLnNldEF0dHJpYnV0ZSgnaWQnLCAnaW5wdXRfd3JhcCcpO1xuICAgIC8vICAgICBmb3JtRm9sZGVyLmFwcGVuZENoaWxkKGlucHV0V3JhcEZvbGRlcjIpO1xuXG4gICAgLy8gICAgIGxldCBsYWJlbER1ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgLy8gICAgIGxhYmVsRHVlLmh0bWxGb3IgPSBcImR1ZVwiO1xuICAgIC8vICAgICBsYWJlbER1ZS5pbm5lclRleHQgPSBcIkR1ZTogXCI7XG4gICAgLy8gICAgIGlucHV0V3JhcEZvbGRlcjIuYXBwZW5kQ2hpbGQobGFiZWxEdWUpO1xuXG4gICAgLy8gICAgIGxldCBpbnB1dER1ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgLy8gICAgIGlucHV0RHVlLnNldEF0dHJpYnV0ZSgndHlwZScsICdkYXRlJyk7XG4gICAgLy8gICAgIGlucHV0RHVlLnNldEF0dHJpYnV0ZSgnaWQnLCAnZHVlJyk7XG4gICAgLy8gICAgIGlucHV0V3JhcEZvbGRlcjIuYXBwZW5kQ2hpbGQoaW5wdXREdWUpO1xuXG4gICAgLy8gICAgIGxldCBpbnB1dFdyYXBGb2xkZXIzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgLy8gICAgIGlucHV0V3JhcEZvbGRlcjMuc2V0QXR0cmlidXRlKCdpZCcsICdpbnB1dF93cmFwJyk7XG4gICAgLy8gICAgIGZvcm1Gb2xkZXIuYXBwZW5kQ2hpbGQoaW5wdXRXcmFwRm9sZGVyMyk7XG5cbiAgICAvLyAgICAgbGV0IGxhYmVsUHJpbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgLy8gICAgIGxhYmVsUHJpby5odG1sRm9yID0gXCJQcmlvcml0eVwiO1xuICAgIC8vICAgICBsYWJlbFByaW8uaW5uZXJUZXh0ID0gXCJQcmlvcml0eTogXCI7XG4gICAgLy8gICAgIGlucHV0V3JhcEZvbGRlcjMuYXBwZW5kQ2hpbGQobGFiZWxQcmlvKTtcblxuICAgIC8vICAgICBsZXQgaW5wdXRQcmlvcml0eSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NlbGVjdCcpO1xuICAgIC8vICAgICBpbnB1dFByaW9yaXR5LnNldEF0dHJpYnV0ZSgnaWQnLCAncHJpb3JpdHknKTtcbiAgICAvLyAgICAgbGV0IG9wdDFGID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XG4gICAgLy8gICAgIGxldCBvcHQyRiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29wdGlvbicpO1xuICAgIC8vICAgICBsZXQgb3B0M0YgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKTtcbiAgICAvLyAgICAgb3B0MkYuZGVmYXVsdFNlbGVjdGVkID0gdHJ1ZTtcblxuICAgIC8vICAgICBvcHQxRi5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgJ0xvdycpO1xuICAgIC8vICAgICBsZXQgbG93RiA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCdMb3cnKTtcbiAgICAvLyAgICAgb3B0MUYuYXBwZW5kQ2hpbGQobG93Rik7XG4gICAgLy8gICAgIGlucHV0UHJpb3JpdHkuYXBwZW5kQ2hpbGQob3B0MUYpO1xuXG4gICAgLy8gICAgIG9wdDJGLnNldEF0dHJpYnV0ZSgndmFsdWUnLCAnTm9ybWFsJyk7XG4gICAgLy8gICAgIGxldCBub3JtYWxGID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJ05vcm1hbCcpO1xuICAgIC8vICAgICBvcHQyRi5hcHBlbmRDaGlsZChub3JtYWxGKTtcbiAgICAvLyAgICAgaW5wdXRQcmlvcml0eS5hcHBlbmRDaGlsZChvcHQyRik7XG5cbiAgICAvLyAgICAgb3B0M0Yuc2V0QXR0cmlidXRlKCd2YWx1ZScsICdVcmdlbnQnKTtcbiAgICAvLyAgICAgbGV0IHVyZ2VudEYgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnVXJnZW50Jyk7XG4gICAgLy8gICAgIG9wdDNGLmFwcGVuZENoaWxkKHVyZ2VudEYpO1xuICAgIC8vICAgICBpbnB1dFByaW9yaXR5LmFwcGVuZENoaWxkKG9wdDNGKTtcblxuICAgIC8vICAgICBpbnB1dFdyYXBGb2xkZXIzLmFwcGVuZENoaWxkKGlucHV0UHJpb3JpdHkpO1xuICAgIC8vICAgICAvLyBpdGVtLmRpc2FibGVkID0gdHJ1ZTtcblxuICAgIC8vICAgICBsZXQgYWRkQnRuRm9sZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7IC8vYWRkQnRuXG4gICAgLy8gICAgIGFkZEJ0bkZvbGRlci5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnc3VibWl0Jyk7XG4gICAgLy8gICAgIGFkZEJ0bkZvbGRlci5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2FkZEJ0bicpO1xuICAgIC8vICAgICBhZGRCdG5Gb2xkZXIuaW5uZXJUZXh0ID0gXCJBZGRcIjtcbiAgICAvLyAgICAgZm9ybUZvbGRlci5hcHBlbmRDaGlsZChhZGRCdG5Gb2xkZXIpO1xuXG4gICAgLy8gICAgIGFkZEJ0bkZvbGRlci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAvLyAgICAgICAgIGFkZFRvZG8oKTtcbiAgICAvLyAgICAgICAgIGNvbnNvbGUubG9nKHRvZG9BcnJheSk7XG4gICAgLy8gICAgICAgICBmb3JtQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2Zvcm1IaWRlJyk7XG4gICAgLy8gICAgIH0pXG5cbiAgICAvLyAgICAgbGV0IHRvZG9Db250YWluZXJGb2xkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAvLyAgICAgdG9kb0NvbnRhaW5lckZvbGRlci5jbGFzc0xpc3QuYWRkKCd0b2RvQ29udGFpbmVyJyk7XG4gICAgLy8gICAgIG5ld0RvYy5hcHBlbmRDaGlsZCh0b2RvQ29udGFpbmVyRm9sZGVyKTtcblxuICAgIH0pXG5cblxuXG59XG5cbmV4cG9ydCB7YWRkRm9sZGVyfTtcblxuXG4iLCJpbXBvcnQgJy4vc3R5bGVzLmNzcyc7XG5pbXBvcnQgeyBhZGRUb2RvLCB0b2RvQXJyYXkgfSBmcm9tICcuL21ha2VUb2Rvcy5qcyc7XG5pbXBvcnQgeyBhZGRGb2xkZXIgfSBmcm9tICcuL21ha2VGb2xkZXIuanMnO1xuXG5cbmNvbnN0IGJ0blRvZG8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYnRuVG9kbycpO1xuY29uc3QgZm9ybUNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNmb3JtQ29udGFpbmVyJyk7XG5jb25zdCBjbG9zZUZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY2xvc2VGb3JtJyk7XG5jb25zdCBhZGRCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYWRkQnRuJyk7XG5cbmNvbnN0IHRvZG8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudG9kb0NvbnRhaW5lcicpO1xuXG5jb25zdCBtYWluQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI21haW5Db250YWluZXInKTtcbmNvbnN0IHRvZG9EaXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdG9kb0RpdicpO1xuXG4vLyBjcmVhdGUgcHJvamVjdFxuY29uc3QgYnRuUHJvamVjdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNidG5Qcm9qZWN0Jyk7XG5idG5Qcm9qZWN0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgIGFkZEZvbGRlcigpO1xufSlcblxuY29uc3QgZGVmYXVsdEZvbGRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5kZWZhdWx0Rm9sZGVyJyk7XG5kZWZhdWx0Rm9sZGVyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT57XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI21haW5Db250YWluZXInKS5yZW1vdmVDaGlsZChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbWFpbkNvbnRhaW5lcicpLmxhc3RFbGVtZW50Q2hpbGQpO1xuICAgIG1haW5Db250YWluZXIuYXBwZW5kQ2hpbGQodG9kb0Rpdik7XG59KVxuXG4vLyBlbmQgcHJvamVjdFxuXG5cbmJ0blRvZG8uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PntcbiAgICBmb3JtQ29udGFpbmVyLnJlbW92ZUF0dHJpYnV0ZSgnY2xhc3MnKTtcbn0pXG5cbmNsb3NlRm9ybS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICBmb3JtQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2Zvcm1IaWRlJyk7XG59KVxuXG5hZGRCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PntcbiAgICBhZGRUb2RvKCk7XG4gICAgY29uc29sZS5sb2codG9kb0FycmF5KTtcbiAgICBmb3JtQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2Zvcm1IaWRlJyk7XG59KVxuLy9mb3IgZm9sZGVycyBmdW5jdGlvbmFsaXR5IGNyZWF0ZSBhIG5ldyBtb2R1bGUgZXZlcnl0aW1lIHRoZW4gcnVuIG9sZCAgbW9kdWxlIGFnYWluIHdoZW4gdXNlciBjbGljayBvbiB0aGF0IGZvbGRlcj8iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJvcHRpb25zIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIm5jIiwidG9kbyIsInRvZG9BcnJheSIsInJlbmRlciIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwidGFza0hvbGRlciIsImNyZWF0ZVRvZG8iLCJjaGVja0JveCIsInRpdGxlRGl2IiwiZHVlRGl2IiwicHJpb0RpdiIsImVkaXRCdG4iLCJyZW1vdmVCdG4iLCJjbGFzc0xpc3QiLCJhZGQiLCJpbmRleE9mIiwidGV4dENvbnRlbnQiLCJ0aXRsZSIsImR1ZSIsInByaW9yaXR5IiwiaW5uZXJUZXh0IiwiYWRkRXZlbnRMaXN0ZW5lciIsImNoZWNrZWQiLCJiYWNrZ3JvdW5kQ29sb3IiLCJjb2xvciIsInJlbW92ZVByb3BlcnR5IiwiaW5wdXRUaXRsZSIsImlucHV0RGF0ZSIsImlucHV0UHJpbyIsIm9wdDEiLCJvcHQyIiwib3B0MyIsInZhbHVlIiwiZGVmYXVsdFNlbGVjdGVkIiwibG93Iiwibm9ybWFsIiwidXJnZW50IiwicmVwbGFjZUNoaWxkIiwib2tCdG4iLCJjb25zb2xlIiwibG9nIiwibWFpbkNvbnRhaW4iLCJnZXRFbGVtZW50QnlJZCIsImZvbGRlckNvbnRhaW5lciIsImZvbGRlckFycmF5IiwiY3JlYXRlRm9sZGVyRnVuYyIsIm5ld0RvYyIsImxhc3RFbGVtZW50Q2hpbGQiLCJidG5Ub2RvIiwiZm9ybUNvbnRhaW5lciIsImNsb3NlRm9ybSIsImFkZEJ0biIsIm1haW5Db250YWluZXIiLCJ0b2RvRGl2IiwibmV3Rm9sZGVyIiwicHJvbXB0IiwicmVuZGVyRm9sZGVyIiwiYWRkRm9sZGVyIiwicmVtb3ZlQXR0cmlidXRlIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsInRvZG9GYWN0b3J5Il0sInNvdXJjZVJvb3QiOiIifQ==